---
title: "Test Python"
jupyter: python3
subtitle: "Test Python"
author:
  - "Li Bai"
  - "Anway Bose"
author-meta: "Li Bai"
institute:
  - "Temple University, USA"
  - "Temple University, USA"
date: "2023-07-27"
date-format: long
params:
  days:
    label: "Number of Previous Days"
    value: 90
    input: slider
    min: 30
    max: 360
  Msg:
    label: "message"
    value: 1
    input: slider
    min: 0
    max: 1 
  region:
    label: "Regions:"
    value: Europe
    input: select
    choices: [North America, Europe, Asia]
format:
  revealjs:
    theme: [dark, style/custom.scss]
    css: style/metacom_logo.css
    chalkboard: true
    slide-number: true
    preview-links: auto
    pointer:
      color: "#e7298a"
      pointerSize: 24
    include-in-header:
      text: |
        <script src="custom.js"></script>
revealjs-plugins:
  - pointer
---

## Quarto

``` c
// C program to check if a given
// year is leap year or not
#include <stdio.h>
#include <stdbool.h>
 
bool checkYear(int year)
{
  // If a year is multiple of 400,
  // then it is a leap year
  if (year % 400 == 0)
    return true;
 
  // Else If a year is multiple of 100,
  // then it is not a leap year
  if (year % 100 == 0)
    return false;
 
  // Else If a year is multiple of 4,
  // then it is a leap year
  if (year % 4 == 0)
    return true;
  return false;
}
 
```

$$
\alpha +\beta
$$

## Running Code

::: incremental
-   Why do we need to develop new encryption
-   Learning with Error
-   How does LWE work
:::

You can embed executable code like this:

```{python}
import numpy as np
a = np.array([1,2,3])
b = np.array([7,6,5])
```

You can add options to executable code like this

```{python}
#| echo: true
c = a+b
print(c)
```

The `echo: false` option disables the printing of code (only output is displayed).

## Plots

See @fig-polar for an example of rendering plots as figures:

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"
#| code-fold: true

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

Note that we included the cell option `fold: true` to hide the code by default (click the *Code* button to show it).

## Animation {auto-animate="true"}

Animation

## Animation {auto-animate="true"}

Implicit

Animation

## Add video {background-video="./vids/drone_video.mp4" background-video-loop="true" background-opacity="0.4"}

-   A
-   B
